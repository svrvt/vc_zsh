# (( ${+*} )) = if variable is set don't set it anymore
#  Note: Do *not* use '$PORTSDIR'! This variable is defined in 
#        '/path/to/ports/Makefile'.
# (( ${+IRCNAME} )) || export IRCNAME="Christian 'strcat' Schneider"  # **EDIT**
# (( ${+IRCNICK} )) || export IRCNICK="strcat"                        # **EDIT**
# (( ${+IRCSERVER} )) || export IRCSERVER="irc.euirc.net"             # **EDIT**
# (( ${+VISUAL} )) || export VISUAL="vim"                             # **EDIT**
# (( ${+BROWSER} )) || export BROWSER="w3m"                           # **EDIT**
# (( ${+OS} )) || export OS="${OSTYPE%%[0-9.]*}"                      # **FIXME**
# (( ${+OSMAJOR} )) || export OSMAJOR="${OSVERSION%%.*}"              # **FIXME**
# (( ${+ORGANIZATION} )) || export ORGANIZATION="Guerrilla UNIX Development (Venimus, Vidimus, Dolavimus)" # **EDIT**
# (( ${+SHITDIR} )) || export SHITDIR="$HOME/Trash"
# (( ${+TERM} )) || export TERM=xterm-256color
# (( ${+LESSCHARSET} )) || export LESSCHARSET=utf-8

# Предупреждение об отсутствии поддержки 256 цветов из termcap/info.
(test -n "$(tput Co 2>/dev/null)" \
	&& test "$(tput Co 2>/dev/null)" -eq 256) \
	|| (test -n "$(tput colors 2>/dev/null)" \
	&& test "$(tput colors 2>/dev/null)" -eq 256) \
	|| echo "WARNING: 256 color terminal not set correctly!"

# Git <http://git.or.cz/>
if [[ -x `which git` ]]; then
	(( ${+GIT_AUTHOR_EMAIL} )) || export GIT_AUTHOR_EMAIL="strcat@gulli.com"
	(( ${+GIT_AUTHOR_NAME} )) || export GIT_AUTHOR_NAME="Christian Schneider"
	(( ${+GIT_COMMITTER_EMAIL} )) ||export GIT_COMMITTER_EMAIL=$GIT_AUTHOR_EMAIL
fi
# Darcs <http://www.darcs.net/>
if [[ -x `which darcs` ]]; then
	(( ${+DARCS_DONT_ESCAPE_EXTRA} )) || export DARCS_DONT_ESCAPE_EXTRA="áéíóúñÁÉÍÓÚÑ"
	(( ${+DARCS_EDITOR} )) || export DARCS_EDITOR="vim"
	(( ${DARCS_EMAIL} )) || export DARCS_EMAIL=darcs@strcat.de
fi
# HTML-Tidy <http://tidy.sourceforge.net/>
if [[ -x `which tidy` ]]; then
	(( ${+HTML_TIDY} )) || export HTML_TIDY=${HOME}/.tidyrc
fi

#Необходимо для Perl... я так думаю!?
#export PERL_UTF8_LOCALE=1 PERL_UNICODE=AS
# Для остановки интерпретаторов Perl, не настроенных на ожидание локали Unicode:
export PERL_BADLANG=0

# Fucking PERL5LIB *narf*
if [[ -d "~/local" ]]; then
	typeset -U perl5lib
	export PERL5LIB
	perl5lib=(
		~/{local/,}lib/[p]erl5{,/site_perl}(N)
		$perl5lib
		)
	PERL5LIB="${(j/:/)perl5lib}"
fi

# он начнет новую сессию tmux при удаленном подключении; если вы хотите
# подавить его, просто используйте "TERM=screen ssh user@host" и сбросьте свой
# $TERM обратно в xterm, или запустите screen/tmux на локальном хосте.
# Если мы уже находимся в screen или не подключены по ssh (локальный доступ),
# не запускайте остальную часть кода (shell безопасен).
if [[ "$TERM" != "screen" ]] && [[ -n "$SSH_CONNECTION" ]]; then
	if `which tmux`; then
		if tmux -q has-session -t $tmux_session 2> /dev/null ; then
			tmux -q attach-session -t $tmux_session
		else
			tmux -q new-session -s $tmux_session
		fi
	fi
fi
# Доступно или нет?
if [[ -x `which lesspipe.sh` ]]; then
	
	export LESSOPEN='|lesspipe.sh %s'             # **EDIT**
fi

# использовать tor (<http://tor.eff.org>) для анонимизации оверлейной сети для TCP
# в сочетании с privoxy (<http://www.privoxy.org>) для веб-прокси
# с расширенными возможностями фильтрации для защиты частной жизни от
# интернет-хлама.
if [ -x $(which tor 1&>/dev/null) ] && [ -e /usr/sbin/privoxy ]; then
	# Большинство приложений командной строки (w3m, ssh, ftp, ...) используют переменную
	# переменную ``HTTP_PROXY'' для соединения с прокси-сервером
	(( ${+HTTP_PROXY} )) || export HTTP_PROXY="http://127.0.0.1:8118/" 
fi


# Установите значения для некоторых переменных окружения:
# NOTE: Утилита ``hostname'' *не* включена во все системы.
# потому что он не является частью IEEE Std 1003.1, 2004 Edition!
  export HOSTNAME="`hostname`"
# Some (useful) options for less
  if [[ -x `which less` ]] ; then
      export PAGER="less"
      export PERLDOC_PAGER="less -+C -E"
      export LESS="-R -C -i -j4 -M -e -PM?m(%i/%m) .?f%f:Standard input.\: ?bb%bb?B/%B. Bytes.?pb (%pb\%).?lb, Zeile\: %lb?e ?x(-> %x):(EOF).%t"
      # export LESS='-rX~deMwPM?f%f ?e[EOF] ?lt[Line\: %lb].:?lt[Line\: %lt]. ?pt%pt\%...'
      export LESSBINFMT='*u[%X]'
      if [[ $terminfo[colors] -ge 8 ]] ; then
          export LESS_TERMCAP_mb=$'\E[01;31m'
	  export LESS_TERMCAP_md=$'\E[01;31m'
	  export LESS_TERMCAP_me=$'\E[0m'
          export LESS_TERMCAP_se=$'\E[0m'
          export LESS_TERMCAP_so=$'\E[01;44;33m'
          export LESS_TERMCAP_ue=$'\E[0m'
          export LESS_TERMCAP_us=$'\E[01;32m'
      fi
  else
      export PAGER="more"
  fi

# gnarf
(( ${+READNULLCMD} )) || export READNULLCMD=${PAGER:-/usr/bin/pager}
# just for fun ..
  export ZVERSION=${VERSION:-"zsh $ZSH_VERSION"}
# это значение необязательно, поскольку CRUX не имеет информационных страниц
  typeset -U infopath # no duplicates
  export INFOPATH="/usr/share/info:/usr/share/binutils-data/i686-pc-linux-gnu/2.16.1/info:/usr/share/gcc-data/i686-pc-linux-gnu/3.4.5/info/"
# стандартная зашифрованная сессия через rsync
  export RSYNC_RSH=ssh
# Не используйте RSH! RSH - отстой!!!
  export CVS_RSH=ssh
# то же самое, что ``-rwxrwxr-x''.
  export CVSUMASK=003
# используйте ``CVSEDITOR=emacs'', если хотите использовать полноценную ОС :>
  export CVSEDITOR=vim

# Некоторые настройки для manpages
  # Установите ширину 80. Этого достаточно
  export MANWIDTH=80
  if [[ -x $(which most) ]]; then
	  export MANPAGER="most"
  else
	  export MANPAGER="less -iMXF"
	 # использовать цвета при просмотре man-страниц (если не используется pinfo или PAGER=most)
	 [[ -d ~/.terminfo/ ]] && alias man='TERMINFO=~/.terminfo/ LESS=C TERM=mostlike PAGER=less man'
  fi

# Attribute codes:
#  00 none
#  01 bold
#  02 faint                  22 normal
#  03 standout               23 no-standout
#  04 underline              24 no-underline
#  05 blink                  25 no-blink
#  07 reverse                27 no-reverse
#  08 conceal
#
LS_COLORS=''
LS_COLORS=$LS_COLORS:'no=0'           # Normal text       = Default foreground  
LS_COLORS=$LS_COLORS:'fi=0'           # Regular file      = Default foreground
LS_COLORS=$LS_COLORS:'di=32'          # Directory         = Bold, Yellow
LS_COLORS=$LS_COLORS:'ln=01;36'       # Symbolic link     = Bold, Cyan
LS_COLORS=$LS_COLORS:'pi=33'          # Named pipe        = Yellow
LS_COLORS=$LS_COLORS:'so=01;35'       # Socket            = Bold, Magenta
eS_COLORS=$LS_COLORS:'do=01;35'       # DO                = Bold, Magenta
LS_COLORS=$LS_COLORS:'bd=01;37'       # Block device      = Bold, Grey
LS_COLORS=$LS_COLORS:'cd=01;37'       # Character device  = Bold, Grey
LS_COLORS=$LS_COLORS:'ex=35'          # Executable file   = Light, Blue
LS_COLORS=$LS_COLORS:'*FAQ=31;7'      # FAQs              = Foreground Red, Background Black
LS_COLORS=$LS_COLORS:'*README=31;7'   # READMEs           = Foreground Red, Background Black
LS_COLORS=$LS_COLORS:'*INSTALL=31;7'  # INSTALLs          = Foreground Red, Background Black
LS_COLORS=$LS_COLORS:'*.sh=47;31'     # Shell-Scripts     = Foreground White, Background Red
LS_COLORS=$LS_COLORS:'*.vim=35'       # Vim-"Scripts"     = Purple
LS_COLORS=$LS_COLORS:'*.torrent=4;33' # Torrents          = Orange, Underline
LS_COLORS=$LS_COLORS:'*.swp=00;44;37' # Swapfiles (Vim)   = Foreground Blue, Background White
LS_COLORS=$LS_COLORS:'*.sl=30;33'     # Slang-Scripts     = Yellow
LS_COLORS=$LS_COLORS:'*,v=5;34;93'    # Versioncontrols   = Bold, Yellow
LS_COLORS=$LS_COLORS:'or=01;05;31'    # Orphaned link     = Bold, Red, Flashing
LS_COLORS=$LS_COLORS:'*.c=1;33'       # Sources           = Bold, Yellow
LS_COLORS=$LS_COLORS:'*.C=1;33'       # Sources           = Bold, Yellow
LS_COLORS=$LS_COLORS:'*.h=1;33'       # Sources           = Bold, Yellow
LS_COLORS=$LS_COLORS:'*.cc=1;33'      # Sources           = Bold, Yellow
LS_COLORS=$LS_COLORS:'*.awk=1;33'     # Sources           = Bold, Yellow
LS_COLORS=$LS_COLORS:'*.pl=1;33'      # Sources           = Bold, Yellow
LS_COLORS=$LS_COLORS:'*.jpg=1;32'     # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.jpeg=1;32'    # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.JPG=1;32'     # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.gif=1;32'     # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.png=1;32'     # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.jpeg=1;32'    # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.ppm=1;32'     # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.pgm=1;32'     # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.pbm=1;32'     # Images            = Bold, Green
LS_COLORS=$LS_COLORS:'*.tar=31'       # Archive           = Red
LS_COLORS=$LS_COLORS:'*.tgz=31'       # Archive           = Red
LS_COLORS=$LS_COLORS:'*.gz=31'        # Archive           = Red
LS_COLORS=$LS_COLORS:'*.zip=31'       # Archive           = Red
LS_COLORS=$LS_COLORS:'*.sit=31'       # Archive           = Red
LS_COLORS=$LS_COLORS:'*.lha=31'       # Archive           = Red
LS_COLORS=$LS_COLORS:'*.lzh=31'       # Archive           = Red
LS_COLORS=$LS_COLORS:'*.arj=31'       # Archive           = Red
LS_COLORS=$LS_COLORS:'*.bz2=31'       # Archive           = Red
LS_COLORS=$LS_COLORS:'*.html=36'      # HTML              = Cyan
LS_COLORS=$LS_COLORS:'*.htm=1;34'     # HTML              = Bold, Blue
LS_COLORS=$LS_COLORS:'*.php=1;45'     # PHP               = White, Cyan
LS_COLORS=$LS_COLORS:'*.doc=1;34'     # MS-Word *lol*     = Bold, Blue
LS_COLORS=$LS_COLORS:'*.txt=1;34'     # Plain/Text        = Bold, Blue
LS_COLORS=$LS_COLORS:'*.o=1;36'       # Object-Files      = Bold, Cyan
LS_COLORS=$LS_COLORS:'*.a=1;36'       # Shared-libs       = Bold, Cyan
LS_COLORS=$LS_COLORS:'*.pdf=1,29'     # PDF               = Whitegrey, Bold
export LS_COLORS


# Формат отчетов о входе/выходе из системы, если установлен параметр watch.
# По умолчанию `%n имеет %a %l от %m'.
# Распознает следующие управляющие последовательности:
#   %n = name of the user that logged in/out.
#   %a = observed action, i.e. "logged on" or "logged off".
#   %l = line (tty) the user is logged in on.
#   %M = full hostname of the remote host.
#   %m = hostname up to the first `.'.
#   %t or %@ = time, in 12-hour, am/pm format.
#   %w = date in `day-dd' format.
#   %W = date in `mm/dd/yy' format.
#   %D = date in `yy-mm-dd' format.
#
WATCHFMT="%B->%b %n has just %a %(l:tty%l:%U-Ghost-%u)%(m: from %m:)"

# формат отчетов о времени процесса с 'time'
#  %%     A `%'.
#  %U     CPU seconds spent in user mode.
#  %S     CPU seconds spent in kernel mode.
#  %E     Elapsed time in seconds.
#  %P     The CPU percentage, computed as  (%U+%S)/%E.
#  %J     The name of this job.
# Default is: 
#       %E real  %U user  %S system   %P  %J
TIMEFMT="\
    The name of this job.             : %J
    CPU seconds spent in user mode.   : %U
    CPU seconds spent in kernel mode. : %S
    Elapsed time in seconds.          : %E
    The  CPU percentage.              : %P"

# Максимальное количество событий, хранящихся во внутреннем списке истории. При использовании опции
# HIST_EXPIRE_DUPS_FIRST, установив это значение больше, чем размер файла
# SAVEHIST, то эта разница будет использоваться в качестве подушки для сохранения
# дублирующихся событий истории.
HISTSIZE=100000

# Прекратите раздражать MailCheck. Я не пользуюсь AOL
unset MAILCHECK

# Имя файла, используемого для хранения истории команд. При назначении history
# загружается из указанного файла. Кроме того, несколько вызовов оболочки
# выполняющихся на одной машине, будут иметь общую историю, если их параметры HISTFILE
# указывают на один и тот же файл.
# я наконец-то обнаружил разницу между `SAVEHIST' и `HISTSIZE'
# благодаря FAQ. `HISTSIZE' - это количество строк истории, которое
# хранится в любом данном запущенном zsh. `SAVEHIST' - это количество строк
# истории, которое будет записано в файл в тот волшебный, таинственный момент. 
# когда происходит это событие. Таким образом, при вводе `HISTFILE' в wc -l должно быть перечислено
# количество событий истории 
if (( ! EUID )); then
  HISTFILE=~/.root_histfile
else
  HISTFILE=~/.zsh_history
fi

SAVEHIST=65536
DIRSTACKSIZE=50

# Если значение неотрицательно, то команды, чье суммарное время выполнения пользователем и системой
# время выполнения которых (измеряется в секундах) больше этого значения, для них выводится временная
# для них выводится статистика.
REPORTTIME=60

# Ограничить этот fuckung "zsh: хотите ли вы увидеть все NNN возможные варианты (NNN
# строк)?" в сторону уменьшения (по умолчанию 100). Запрашивать только перед выводом
# завершения, если это приведет к прокрутке.
LISTMAX=0

# Секунды для проверки входа в систему / выхода из нее
LOGCHECK=20


# Для пользователей root убедитесь, что /usr/local/sbin, /usr/sbin и /sbin находятся в списке
if (( EUID == 0 )); then
        echo $PATH | grep /usr/local/sbin 1> /dev/null 2> /dev/null
        if [ ! $? = 0 ]; then
                PATH=/usr/local/sbin:/usr/sbin:/sbin:$PATH
        fi
fi

# если ваш compdef Dir - ~/.zsh
if [ -d "${HOME}/.zsh/func" ]; then
	fpath=( $fpath ~/.zsh/func )
	autoload -U ~/.zsh/func/*(:t)
fi

# Массив (список, разделенный двоеточиями) каталогов, задающих
# путь поиска для команды cd.
CDPATH="$PORTS_DIR"

# See <http://sugi.nemui.org/doc/zsh/> for details.
if autoload +X -U _accept_line_with_url > /dev/null 2>&1 ; then
	zle -N accept-line-with-url _accept_line_with_url
	bindkey '^M' accept-line-with-url
	bindkey '^J' accept-line-with-url
	export DOWNLOADER="wget -S -c"
fi

if [ "$DISPLAY" = "screen" ]; then
	stty erase '^?'
fi

# автоматически удалять дубликаты из этих массивов
typeset -gU path cdpath manpath fpath

# RTFM!!!11!
MANPATH="/usr/share/man:/usr/local/man"
for mdir in \
        ${HOME}/.Documentations/manpages.ru \
        /usr/man \
        /usr/X11/man \
        /usr/share/texmf/man \
        /usr/contrib/man \
        /usr/share/man/old
do
        [ -d "${mdir}" ] && MANPATH="${MANPATH}:${mdir}"
done


# Выполняется всякий раз, когда команда имеет ненулевой статус выхода:
#-------------------------------------------------- 
if fortune > /dev/null 2>&1 ;then
	TRAPZERR() { fortune bofh-excuses | tail -n 1 }
fi

# Подсказка, используемая для исправления орфографии. Последовательность `%R' расширяется до
# строки, которая предположительно нуждается в исправлении, а `%r' расширяется
# до предлагаемого исправления. Все остальные экранирования подсказки также допустимы.
SPROMPT=$'%BError!%b Correct %{\e[31m%}%R%{ \e[0m%}to%{ \e[36m%}%r%{ \e[0m%}? [No/Yes/Abort/Edit]: '
